package com.example.lab_03.bai02_Calculator;

import androidx.test.ext.junit.rules.ActivityScenarioRule;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import com.example.lab_03.R;

import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;

import static androidx.test.espresso.Espresso.onView;
import static androidx.test.espresso.action.ViewActions.click;
import static androidx.test.espresso.assertion.ViewAssertions.matches;
import static androidx.test.espresso.matcher.ViewMatchers.withId;
import static androidx.test.espresso.matcher.ViewMatchers.withText;

/**
 * üîπ Flow Test: Ki·ªÉm th·ª≠ to√†n b·ªô thao t√°c ch√≠nh tr√™n UI c·ªßa CalculatorActivity.
 * Ch·∫°y ch·∫≠m c√≥ delay ƒë·ªÉ ng∆∞·ªùi d√πng quan s√°t r√µ t·ª´ng b∆∞·ªõc tr√™n giao di·ªán.
 */
@RunWith(AndroidJUnit4.class)
public class CalculatorFlowTest {

    @Rule
    public ActivityScenarioRule<CalculatorActivity> rule =
            new ActivityScenarioRule<>(CalculatorActivity.class);

    /** H√†m d·ª´ng t·∫°m ƒë·ªÉ quan s√°t UI gi·ªØa c√°c test */
    private void pause(long ms) {
        try {
            Thread.sleep(ms);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    /** 1. Ph√©p t√≠nh c∆° b·∫£n: 1 + 2 = 3 */
    @Test
    public void testEvaluateSimpleUI() {
        pause(1000);
        onView(withId(R.id.btn1)).perform(click());
        onView(withId(R.id.btnAdd)).perform(click());
        onView(withId(R.id.btn2)).perform(click());
        onView(withId(R.id.btnEqual)).perform(click());
        onView(withId(R.id.tvResult)).check(matches(withText("3")));
        pause(5000);
    }

    /** 2. L√†m tr√≤n k·∫øt qu·∫£ 1 √∑ 2 = 0.5 */
    @Test
    public void testTrimDoubleUI() {
        pause(1000);
        onView(withId(R.id.btn1)).perform(click());
        onView(withId(R.id.btnDiv)).perform(click());
        onView(withId(R.id.btn2)).perform(click());
        onView(withId(R.id.btnEqual)).perform(click());
        onView(withId(R.id.tvResult)).check(matches(withText("0.5")));
        pause(5000);
    }

    /** 3. Thay to√°n t·ª≠ cu·ªëi (2 ++ 3 => 2 + 3) */
    @Test
    public void testReplaceLastOperatorUI() {
        pause(1000);
        onView(withId(R.id.btn2)).perform(click());
        onView(withId(R.id.btnAdd)).perform(click());
        onView(withId(R.id.btnAdd)).perform(click());
        onView(withId(R.id.btn3)).perform(click());
        onView(withId(R.id.btnEqual)).perform(click());
        onView(withId(R.id.tvResult)).check(matches(withText("5")));
        pause(5000);
    }

    /** 4Ô∏è‚É£ √Åp d·ª•ng ph·∫ßn trƒÉm (100 + 25%) = 125 */
    @Test
    public void testPercentUI() {
        pause(1000);
        onView(withId(R.id.btn1)).perform(click());
        onView(withId(R.id.btn0)).perform(click());
        onView(withId(R.id.btn0)).perform(click());
        onView(withId(R.id.btnAdd)).perform(click());
        onView(withId(R.id.btn2)).perform(click());
        onView(withId(R.id.btn5)).perform(click());
        onView(withId(R.id.btnPercent)).perform(click());
        onView(withId(R.id.btnEqual)).perform(click());
        onView(withId(R.id.tvResult)).check(matches(withText("125")));
        pause(5000);
    }

    /** 5Ô∏è‚É£ Ph·∫ßn trƒÉm l·ªìng nhau (25%%) */
    @Test
    public void testNestedPercentUI() {
        pause(1000);
        onView(withId(R.id.btn2)).perform(click());
        onView(withId(R.id.btn5)).perform(click());
        onView(withId(R.id.btnPercent)).perform(click());
        onView(withId(R.id.btnPercent)).perform(click());
        onView(withId(R.id.tvExpression)).check(matches(withText("25%%")));
        pause(5000);
    }

    /** 6. ƒê·ªïi d·∫•u (+/-) */
    @Test
    public void testToggleSignUI() {
        pause(1000);
        onView(withId(R.id.btn5)).perform(click());
        onView(withId(R.id.btnNegate)).perform(click());
        onView(withId(R.id.tvExpression)).check(matches(withText("(-5)")));
        pause(5000);
    }

    /** 7Ô∏è‚É£ Xo√° 1 k√Ω t·ª± (‚å´) */
    @Test
    public void testDeleteOneCharUI() {
        pause(1000);
        onView(withId(R.id.btn9)).perform(click());
        onView(withId(R.id.btnDelete)).perform(click());
        onView(withId(R.id.tvExpression)).check(matches(withText("")));
        pause(5000);
    }

    /** 8. Xo√° to√†n b·ªô (AC) */
    @Test
    public void testClearUI() {
        pause(1000);
        onView(withId(R.id.btn1)).perform(click());
        onView(withId(R.id.btnAdd)).perform(click());
        onView(withId(R.id.btn2)).perform(click());
        onView(withId(R.id.btnClear)).perform(click());
        onView(withId(R.id.tvResult)).check(matches(withText("0"))); // ho·∫∑c "" tu·ª≥ UI
        pause(5000);
    }

    /** 9Ô∏è‚É£ Chia cho 0 */
    @Test
    public void testDivideByZeroUI() {
        pause(1000);
        onView(withId(R.id.btn1)).perform(click());
        onView(withId(R.id.btnDiv)).perform(click());
        onView(withId(R.id.btn0)).perform(click());
        onView(withId(R.id.btnEqual)).perform(click());
        onView(withId(R.id.tvResult)).check(matches(withText("L·ªói")));
        pause(5000);
    }
}
